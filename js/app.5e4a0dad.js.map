{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/sonntuet1997/pofe/sonntuet1997.pofe.pofe/module/types/pofe/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/sonntuet1997/pofe/sonntuet1997.pofe.pofe/module/types/pofe/claim.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?d966","webpack:///./src/App.vue?889f","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/sonntuet1997/pofe/sonntuet1997.pofe.pofe/module/rest.js","webpack:///./src/store/generated/sonntuet1997/pofe/sonntuet1997.pofe.pofe/module/index.js","webpack:///./src/store/generated/sonntuet1997/pofe/sonntuet1997.pofe.pofe/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fadd","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?0fc0","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?d490","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClaim","creator","proof","MsgCreateClaim","string","baseMsgUpdateClaim","id","MsgUpdateClaim","uint64","baseMsgDeleteClaim","MsgDeleteClaim","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseClaim","Claim","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","V1Beta1ProposalStatus","V1Beta1VoteOption","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryParams","paramsType","method","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","types","MsgSubmitProposal","MsgDeposit","MsgVote","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgSubmitProposal","msgDeposit","msgVote","queryClient","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","getDefaultState","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","_Structure","TextProposal","DepositParams","VotingParams","TallyParams","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getProposal","getProposals","getVote","getVotes","getParams","getDeposit","getDeposits","getTallyResult","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","QueryProposal","options","subscribe","all","proposal_id","SpVuexError","QueryProposals","pagination","nextKey","next_values","prop","QueryVote","QueryVotes","QueryParams","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","msg","sendMsgDeposit","sendMsgVote","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryClaimAll","queryClaim","msgUpdateClaim","msgCreateClaim","msgDeleteClaim","ClaimAll","getClaim","getClaimAll","QueryClaim","QueryClaimAll","sendMsgUpdateClaim","sendMsgCreateClaim","sendMsgDeleteClaim","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","V1Beta1BondStatus","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidators","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidators","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidators","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidators","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","V1Order","V1State","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","client_id","QueryClientStates","QueryConsensusState","revision_number","revision_height","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","MsgCreateVestingAccount","msgCreateVestingAccount","sendMsgCreateVestingAccount","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","CosmosCosmosSdkCosmosGovV1Beta1","load","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","Sonntuet1997PofeSonntuet1997PofePofe","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkIbcCoreClientV1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","modulePath","moduleType","routerHistory","createWebHistory","routes","component","Index","Types","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.5e4a0dad.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"sonntuet1997.pofe.pofe\";\nconst baseMsgCreateClaim = { creator: \"\", proof: \"\" };\nexport const MsgCreateClaim = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.proof !== \"\") {\n            writer.uint32(18).string(message.proof);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClaim };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.proof = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClaim };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = String(object.proof);\n        }\n        else {\n            message.proof = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.proof !== undefined && (obj.proof = message.proof);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClaim };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClaimResponse = { id: 0 };\nexport const MsgCreateClaimResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClaimResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClaimResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClaimResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClaim = { creator: \"\", id: 0, proof: \"\" };\nexport const MsgUpdateClaim = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.proof !== \"\") {\n            writer.uint32(26).string(message.proof);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClaim };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.proof = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClaim };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = String(object.proof);\n        }\n        else {\n            message.proof = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.proof !== undefined && (obj.proof = message.proof);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClaim };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClaimResponse = {};\nexport const MsgUpdateClaimResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClaimResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateClaimResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateClaimResponse };\n        return message;\n    },\n};\nconst baseMsgDeleteClaim = { creator: \"\", id: 0 };\nexport const MsgDeleteClaim = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteClaim };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteClaim };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteClaim };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteClaimResponse = {};\nexport const MsgDeleteClaimResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteClaimResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteClaimResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteClaimResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClaim(request) {\n        const data = MsgCreateClaim.encode(request).finish();\n        const promise = this.rpc.request(\"sonntuet1997.pofe.pofe.Msg\", \"CreateClaim\", data);\n        return promise.then((data) => MsgCreateClaimResponse.decode(new Reader(data)));\n    }\n    UpdateClaim(request) {\n        const data = MsgUpdateClaim.encode(request).finish();\n        const promise = this.rpc.request(\"sonntuet1997.pofe.pofe.Msg\", \"UpdateClaim\", data);\n        return promise.then((data) => MsgUpdateClaimResponse.decode(new Reader(data)));\n    }\n    DeleteClaim(request) {\n        const data = MsgDeleteClaim.encode(request).finish();\n        const promise = this.rpc.request(\"sonntuet1997.pofe.pofe.Msg\", \"DeleteClaim\", data);\n        return promise.then((data) => MsgDeleteClaimResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"sonntuet1997.pofe.pofe\";\nconst baseClaim = { creator: \"\", id: 0, proof: \"\" };\nexport const Claim = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.proof !== \"\") {\n            writer.uint32(26).string(message.proof);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClaim };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.proof = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClaim };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = String(object.proof);\n        }\n        else {\n            message.proof = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.proof !== undefined && (obj.proof = message.proof);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClaim };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = object.proof;\n        }\n        else {\n            message.proof = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=21017ee9\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title pofe/claim.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClaimAll\n         * @request GET:/sonntuet1997/pofe/pofe/claim\n         */\n        this.queryClaimAll = (query, params = {}) => this.request({\n            path: `/sonntuet1997/pofe/pofe/claim`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClaim\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/sonntuet1997/pofe/pofe/claim/{id}\n         */\n        this.queryClaim = (id, params = {}) => this.request({\n            path: `/sonntuet1997/pofe/pofe/claim/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpdateClaim } from \"./types/pofe/tx\";\nimport { MsgCreateClaim } from \"./types/pofe/tx\";\nimport { MsgDeleteClaim } from \"./types/pofe/tx\";\nconst types = [\n    [\"/sonntuet1997.pofe.pofe.MsgUpdateClaim\", MsgUpdateClaim],\n    [\"/sonntuet1997.pofe.pofe.MsgCreateClaim\", MsgCreateClaim],\n    [\"/sonntuet1997.pofe.pofe.MsgDeleteClaim\", MsgDeleteClaim],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpdateClaim: (data) => ({ typeUrl: \"/sonntuet1997.pofe.pofe.MsgUpdateClaim\", value: data }),\n        msgCreateClaim: (data) => ({ typeUrl: \"/sonntuet1997.pofe.pofe.MsgCreateClaim\", value: data }),\n        msgDeleteClaim: (data) => ({ typeUrl: \"/sonntuet1997.pofe.pofe.MsgDeleteClaim\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Claim } from \"./module/types/pofe/claim\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Claim: {},\n        ClaimAll: {},\n        _Structure: {\n            Claim: getStructure(Claim.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClaim: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Claim[JSON.stringify(params)] ?? {};\n        },\n        getClaimAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClaimAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClaim({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClaim(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryClaim(key.id)).data;\n                commit('QUERY', { query: 'Claim', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClaim', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClaim']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClaim', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClaimAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClaimAll(query)).data : (await (await initQueryClient(rootGetters)).queryClaimAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClaimAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClaimAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClaimAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClaimAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClaimAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpdateClaim({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClaim(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClaim:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClaim:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClaim({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClaim(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClaim:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClaim:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteClaim({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteClaim(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteClaim:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteClaim:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpdateClaim({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClaim(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClaim:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClaim:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClaim({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClaim(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClaim:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClaim:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteClaim({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteClaim(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteClaim:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteClaim:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport Sonntuet1997PofeSonntuet1997PofePofe from './sonntuet1997/pofe/sonntuet1997.pofe.pofe';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nexport default {\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    Sonntuet1997PofeSonntuet1997PofePofe: load(Sonntuet1997PofeSonntuet1997PofePofe, 'sonntuet1997.pofe.pofe'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"sonntuet1997.pofe.pofe\" moduleType=\"Claim\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=71271070\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}